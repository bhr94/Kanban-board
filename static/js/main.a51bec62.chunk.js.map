{"version":3,"sources":["../node_modules/typescript/lib sync","assets/img/brand/argon-react.png","assets/img/theme/image3.png","assets/img/theme/girl-work-on-laptop-1792788-1519329.png","assets/img/theme/img-1-1200x1000.jpg","assets/img/ill/ill-2.svg","assets/img/theme/image1.png","assets/img/theme/image2.png","history.js","redux/reducers/rootReducer.js","components/Navbars/DemoNavbar.js","components/Footers/SimpleFooter.js","views/examples/Landing.js","views/examples/UserData.js","redux/actions/loadUserAction.js","fbConfig.js","views/examples/Login.js","views/examples/Register.js","redux/actions/createBoardAction.js","redux/actions/loadBoardsAction.js","redux/actions/loadCurrentBoardListAction.js","redux/actions/loadListsAction.js","redux/actions/removeCurrentBoardDataAction.js","redux/actions/addNewBoardAction.js","views/examples/UserProfile.js","views/examples/CardList.js","redux/actions/createListAction.js","views/examples/Card.js","redux/actions/createCardAction.js","redux/actions/loadCardsAction.js","redux/actions/loadCurrentBoardAction.js","redux/actions/addCurrentBoardListAction.js","redux/actions/addCurrentBoardCardAction.js","redux/actions/updateListTitleAction.js","redux/actions/updateCardContentAction.js","redux/actions/updateListAction.js","redux/actions/deleteCardFromPreviousListAction.js","views/examples/BoardPage.js","index.js","assets/img/icons/common/github.svg","assets/img/icons/common/google.svg"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","history","createHistory","initialState","boards","isBoardsPending","boardsLoadError","user","userId","userName","email","idToken","isListsPending","listsLoadError","isCardsPending","cardsLoadError","isCurrentBoardPending","currentBoardLoadError","currentBoard","isCurrentBoardListPending","currentBoardListLoadError","rootReducer","state","action","type","board","boardId","payload","boardTitle","lists","newBoards","filter","list","listId","listTitle","cards","push","map","card","cardId","cardContent","newUser","Object","assign","newBoard","boardid","boardname","newList","listid","listtitle","emptyBoards","splice","length","data","cardid","cardcontent","sourceListId","i","console","log","JSON","stringify","DemoNavbar","collapseClasses","collapseOpen","onExiting","setState","onExited","Headroom","document","getElementById","init","className","Navbar","expand","Container","UncontrolledCollapse","toggler","navbar","this","Row","Col","xs","to","alt","src","require","Nav","UncontrolledDropdown","nav","DropdownMenu","Media","href","target","body","class","tag","Link","NavItem","NavLink","UncontrolledTooltip","delay","React","Component","SimpleFooter","md","Date","getFullYear","Landing","onSubmit","documentElement","scrollTop","scrollingElement","refs","main","ref","lg","Button","color","onClick","style","width","height","Badge","CardImg","top","xmlns","preserveAspectRatio","viewBox","points","opacity","preventDefault","CardBody","UserData","setUserData","localStorage","setItem","token","username","removeToken","removeItem","getToken","getItem","getName","getId","setCurrentBoardData","getCurrentBoardTitle","getCurrentBoardId","setCurrentBoardLists","getCurrentBoardLists","parse","updateCurrentBoardTitle","loadUserAction","auth","GoogleAuthProvider","addScope","Login","onEmailChange","event","value","onPasswordChange","password","handleLoadUser","props","loadUser","bodyContent","fetch","method","headers","then","response","json","alert","catch","err","onSignIn","googleUser","profile","getBasicProfile","getImageUrl","getEmail","CardHeader","Form","role","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","onChange","placeholder","autoComplete","htmlFor","connect","dispatch","Register","onNameChange","name","mail","createBoardAction","loadBoardsAction","error","loadCurrentBoardListAction","a","Promise","all","newcards","loadListsAction","removeCurrentBoardDataAction","addNewBoardAction","Modal","setAppElement","UserProfile","openModal","modalIsOpen","closeModal","inputOnChange","inputValue","handleClick","createBoard","goToBoard","setModalIsOpen","loadBoards","title","variant","isOpen","onHide","aria-describedby","Spinner","key","loadCurrentBoardList","loadLists","removeCurrentBoardData","addNewBoard","CardList","changeListEditMode","createListAction","createCardAction","loadCardsAction","loadCurrentBoardAction","addCurrentBoardListAction","addCurrentBoardCardAction","updateListTitle","updateCardContentAction","updateListAction","deleteCardFromPreviousListAction","BoardPage","changeEditMode","isInEditMode","updateComponentValue","newTitle","renderEditView","defaultValue","newValue","renderDefaultView","closeCardModal","prevState","addCardMode","isAddCardOpen","input","addList","addCurrentBoardList","cardTitleOnChange","cardTitle","addCard","addCurrentBoardCard","listEdit","listEditMode","newListTitle","onListTitleChange","openCardEditMode","editCardMode","isEditCardOpen","updateCard","newCardContent","updateCardContent","cardEditOnChange","openDropDown","dropDownOpen","onDragEnd","result","destination","source","droppableId","sourceList","destList","sourceCards","destCards","index","removed","updateList","deleteCardFromList","copiedCards","match","params","DndProvider","backend","HTML5Backend","toString","provided","snapshot","droppableProps","innerRef","inputRef","createRef","background","isDraggingOver","draggableId","draggableProps","dragHandleProps","tabindex","autocomplete","dir","maxlength","ownProps","parseInt","find","createList","createCard","loadCards","loadCurrentBoard","addCurrentBoardlistAction","updateListTitleAction","logger","createLogger","store","createStore","applyMiddleware","thunk","ReactDOM","render","path","exact"],"mappings":"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","file":"static/js/main.a51bec62.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 114;","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","module.exports = __webpack_public_path__ + \"static/media/image3.8d3eabc5.png\";","module.exports = __webpack_public_path__ + \"static/media/girl-work-on-laptop-1792788-1519329.2b213388.png\";","module.exports = __webpack_public_path__ + \"static/media/img-1-1200x1000.1e7c70dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ill-2.594b1ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/image1.f4815311.png\";","module.exports = __webpack_public_path__ + \"static/media/image2.6847af55.png\";","import createHistory from 'history/createBrowserHistory';\nlet history = createHistory();\nexport default history;\n\n","import { data } from \"jquery\";\nimport { isConditionalExpression } from \"typescript\";\n\nconst initialState = {\n    boards: [],\n    isBoardsPending: false,\n    boardsLoadError: '',\n    user: {\n        userId: 0,\n        userName: \"\",\n        email: \"\",\n        idToken: \"\"\n    },\n    isListsPending: false,\n    listsLoadError: '',\n    isCardsPending: false,\n    cardsLoadError: '',\n    isCurrentBoardPending: false,\n    currentBoardLoadError: '',\n    currentBoard: {},\n    isCurrentBoardListPending: true,\n    currentBoardListLoadError: ''\n\n}\n\nconst rootReducer = (state = initialState, action) => {\n    if (action.type === \"CREATE_BOARD\") {\n        const board = {\n            boardId: action.payload.boardId,\n            boardTitle: action.payload.boardTitle,\n            lists: []\n\n        }\n\n        // let newBoards = state.boards\n        // newBoards.push(board)\n        return {\n            ...state,\n            currentBoard: board\n        }\n    }\n\n    if (action.type === \"CREATE_LIST\") {\n        let newBoards = state.boards;\n        // console.log(\"newBoards: \" + JSON.stringify(newBoards))\n        newBoards.filter(board => {\n            if (action.payload.boardId === board.boardId) {\n                let list = {\n                    listId: action.payload.listId,\n                    listTitle: action.payload.listTitle,\n                    cards: []\n                }\n                board.lists.push(list)\n                return {\n                    ...state,\n                    boards: newBoards\n                }\n            }\n        })\n    }\n\n    if (action.type === \"CREATE_CARD\") {\n        let newBoards = state.boards;\n        newBoards.filter(board => {\n            if (action.payload.boardId === board.boardId) {\n                board.lists.map(list => {\n                    if (list.listId === action.payload.listId) {\n                        let card = {\n                            cardId: action.payload.cardId,\n                            cardContent: action.payload.cardContent\n                        }\n                        list.cards.push(card);\n                        return {\n                            ...state,\n                            boards: newBoards\n                        }\n                    }\n                })\n            }\n        })\n    }\n\n\n    if (action.type === \"LOAD_USER\") {\n        let newUser = state.user;\n        newUser = {\n            userId: action.payload.userId,\n            userName: action.payload.userName,\n            email: action.payload.email,\n            idToken: action.payload.idToken\n        }\n        return {\n            ...state,\n            user: newUser\n        }\n    }\n\n    switch (action.type) {\n        case \"LOAD_BOARDS_PENDING\":\n            return Object.assign({}, state, { isBoardsPending: true });\n        case 'LOAD_BOARDS_SUCCESS':\n            let newBoards = state.boards;\n            action.payload.map(board => {\n                let newBoard = {\n                    boardId: board.boardid,\n                    boardTitle: board.boardname,\n                    lists: []\n                }\n                newBoards.push(newBoard)\n            })\n            return Object.assign({}, state, { boards: newBoards, isBoardsPending: false });\n\n        case 'LOAD_BOARDS_FAILED':\n            return Object.assign({}, state, { boardsLoadError: action.payload })\n\n    }\n\n    switch (action.type) {\n        case 'LOAD_LISTS_PENDING':\n            return Object.assign({}, state, { isListsPending: true });\n        case 'LOAD_LISTS_SUCCESS':\n            let newBoards = state.boards;\n            newBoards.map(board => {\n                if (board.boardId === action.payload.boardId) {\n                    action.payload.lists.map(list => {\n                        let newList = {\n                            listId: list.listid,\n                            listTitle: list.listtitle,\n                            cards: list.cards\n                        }\n                        board.lists.push(newList)\n\n                    })\n                }\n            })\n            return Object.assign({}, state, { boards: newBoards, isListsPending: false });\n        case 'LOAD_LISTS_FAILED':\n            return Object.assign({}, state, { listsLoadError: action.payload })\n\n    }\n\n\n    switch (action.type) {\n        case 'LOAD_CURRENT_BOARD_PENDING':\n            return Object.assign({}, state, { isCurrentBoardPending: true });\n        case 'LOAD_CURRENT_BOARD_SUCCESS':\n            let board = state.currentBoard;\n            board = [{\n                boardId: action.payload.boardid,\n                boardTitle: action.payload.boardname,\n                lists: []\n            }]\n            return Object.assign({}, state, { currentBoard: board, isCurrentBoardPending: false });\n        case 'LOAD_CURRENT_BOARD_FAILED':\n            return Object.assign({}, state, { currentBoardLoadError: action.payload })\n    }\n\n    switch (action.type) {\n        case 'LOAD_CURRENT_BOARD_LIST_PENDING':\n            return Object.assign({}, state, { isCurrentBoardListPending: true });\n        case 'LOAD_CURRENT_BOARD_LIST_SUCCESS':\n            let board = state.currentBoard;\n            board.lists = action.payload;\n            return Object.assign({}, state, { currentBoard: board, isCurrentBoardListPending: false });\n        case 'LOAD_CURRENT_BOARD_LIST_FAILED':\n            return Object.assign({}, state, { currentBoardListLoadError: action.payload })\n    }\n\n    if (action.type === 'EMPTY_BOARDS') {\n        let emptyBoards = state.boards;\n        emptyBoards.splice(0, emptyBoards.length);\n        return {\n            ...state,\n            boards: emptyBoards\n        }\n    }\n\n\n    if (action.type === 'ADD_CURRENT_BOARD_LIST') {\n        let board = state.currentBoard;\n        board.lists.push(action.payload);\n        board.lists[board.lists.length - 1].cards = []\n        return {\n            ...state,\n            currentBoard: board\n        }\n    }\n\n    if (action.type === 'REMOVE_CURRENT_BOARD_DATA') {\n        let board = state.currentBoard;\n        board.lists = [];\n        return {\n            ...state,\n            currentBoard: board\n        }\n    }\n\n    if (action.type === 'ADD_CURRENT_BOARD_CARD') {\n        let board = state.currentBoard;\n        board.lists.map(list => {\n            if (action.payload.listId === list.listid) {\n                list.cards.push(action.payload.data)\n            }\n        })\n        return {\n            ...state,\n            currentBoard: board\n        }\n    }\n\n    if (action.type === 'UPDATE_LIST_TITLE') {\n        let board = state.currentBoard;\n        board.lists.map(list => {\n            if (action.payload.listId === list.listid) {\n                list.listtitle = action.payload.data.listtitle;\n            }\n        })\n        return {\n            ...state,\n            currentBoard: board\n        }\n    }\n\n    if (action.type === 'UPDATE_CARD_CONTENT') {\n        let board = state.currentBoard;\n        board.lists.map(list => {\n            if (action.payload.data.listid === list.listid) {\n                list.cards.map(card => {\n                    if (card.cardid === action.payload.cardId) {\n                        card.cardcontent = action.payload.data.cardcontent\n                    }\n                })\n            }\n            return {\n                ...state,\n                currentBoard: board\n            }\n        })\n    }\n\n    if (action.type === 'UPDATE_LIST') {\n        let board = state.currentBoard;\n        board.lists.map(list=> {\n            if (list.listid === action.payload.listid) {\n                list.cards.push(action.payload)\n            }\n\n       })\n       return {\n        ...state,\n        currentBoard: board\n    }\n    }\n\n    if(action.type === 'DELETE_CARD_FROM_LIST') {\n        let board = state.currentBoard;\n        board.lists.map(list=> {\n            if (list.listid === action.payload.sourceListId) {\n                list.cards.map((card,i)=>{\n                    if(card.cardid === action.payload.data.cardid) {\n                       list.cards.splice(i, 1)\n                    }\n                })\n              }\n              console.log('deleted list ' + JSON.stringify(list))\n        })\n\n        return {\n            ...state,\n            currentBoard: board\n        }\n    }\n\n    if(action.type === 'ADD_NEW_BOARD'){\n        let boards = state.boards\n        boards.push(action.payload)\n        return {\n            ...state,\n            boards:boards\n        }\n    }\n    return state;\n}\n\n\nexport default rootReducer;\n\n\n//  boards[{\n//      boardId:id,\n//      boardTitle: \"title\",\n//      lists: [\n//          {\n//             listid:id,\n//             listTitle:\"title\",\n//                  cards:[\n//                  {\n//                     cardId:id,\n//                     cardContext:\"context\"\n//                 }\n//         ]\n//     }\n//      ]\n// }]","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"tachyons\";\n// JavaScript plugin that hides or shows a component based on your scroll\nimport Headroom from \"headroom.js\";\n// reactstrap components\nimport {\n  Button,\n  UncontrolledCollapse,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nclass DemoNavbar extends React.Component {\n  componentDidMount() {\n    let headroom = new Headroom(document.getElementById(\"navbar-main\"));\n    // initialise\n    headroom.init();\n  }\n  state = {\n    collapseClasses: \"\",\n    collapseOpen: false\n  };\n\n  onExiting = () => {\n    this.setState({\n      collapseClasses: \"collapsing-out\"\n    });\n  };\n\n  onExited = () => {\n    this.setState({\n      collapseClasses: \"\"\n    });\n  };\n\n  // <h1 class=\"hero-title\" data-sr-id=\"4\" \n  // style=\"visibility: visible; opacity: 1; \n  // transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); \n  // transition: opacity 1s cubic-bezier(0.5, 0, 0, 1) 0.5s, \n  // transform 1s cubic-bezier(0.5, 0, 0, 1) 0.5s;\">Hi, my name is <span class=\"text-color-main\">\n  //   Rexx Samuell</span>\n  //   <br>My motto is:<br>Disciplined, Developing, Deploying.</h1>\n\n  render() {\n    return (\n      <>\n        <header className=\"header-global\">\n          <Navbar\n            className=\"navbar-main navbar-transparent navbar-light headroom\"\n            expand=\"lg\"\n            id=\"navbar-main\"\n          >\n            <Container>\n              {/* <NavbarBrand className=\"mr-lg-5\" to=\"/\" tag={Link}>\n                <img\n                  alt=\"...\"\n                  src={require(\"assets/img/brand/argon-react-white.png\")}\n                />\n              </NavbarBrand> */}\n              <button className=\"navbar-toggler\" id=\"navbar_global\">\n                <span className=\"navbar-toggler-icon\" />\n              </button>\n              <UncontrolledCollapse\n                toggler=\"#navbar_global\"\n                navbar\n                className={this.state.collapseClasses}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <div className=\"navbar-collapse-header\">\n                  <Row>\n                    <Col className=\"collapse-brand\" xs=\"6\">\n                      <Link to=\"/\">\n                        <img\n                          alt=\"...\"\n                          src={require(\"../../assets/img/brand/argon-react.png\")}\n                        />\n                      </Link>\n                    </Col>\n                    <Col className=\"collapse-close\" xs=\"6\">\n                      <button className=\"navbar-toggler\" id=\"navbar_global\">\n                        <span />\n                        <span />\n                      </button>\n                    </Col>\n                  </Row>\n                </div>\n\n\n                <Nav className=\"navbar-nav-hover align-items-lg-center\" navbar>\n                  <UncontrolledDropdown nav>\n                    {/* <DropdownToggle nav>\n                      <i className=\"ni ni-ui-04 d-lg-none mr-1\" />\n                      <span className=\"nav-link-inner--text\">Components</span>\n                    </DropdownToggle> */}\n                    <DropdownMenu className=\"dropdown-menu-xl\">\n                      <div className=\"dropdown-menu-inner\">\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/overview?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-primary rounded-circle text-white\">\n                            <i className=\"ni ni-spaceship\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h6 className=\"heading text-primary mb-md-1\">\n                              Getting started\n                            </h6>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Learn how to use Argon compiling Scss, change\n                              brand colors and more.\n                            </p>\n                          </Media>\n                        </Media>\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/colors?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-success rounded-circle text-white\">\n                            <i className=\"ni ni-palette\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h6 className=\"heading text-primary mb-md-1\">\n                              Foundation\n                            </h6>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Learn more about colors, typography, icons and the\n                              grid system we used for Argon.\n                            </p>\n                          </Media>\n                        </Media>\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/alert?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-warning rounded-circle text-white\">\n                            <i className=\"ni ni-ui-04\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h5 className=\"heading text-warning mb-md-1\">\n                              Components\n                            </h5>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Browse our 50 beautiful handcrafted components\n                              offered in the Free version.\n                            </p>\n                          </Media>\n                        </Media>\n                      </div>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n\n                  {/* <UncontrolledDropdown nav>\n                    <DropdownToggle nav>\n                      <i className=\"ni ni-collection d-lg-none mr-1\" />\n                      <span className=\"nav-link-inner--text\">Examples</span>\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem to=\"/landing-page\" tag={Link}>\n                        Landing\n                      </DropdownItem>\n                      <DropdownItem to=\"/profile-page\" tag={Link}>\n                        Profile\n                      </DropdownItem>\n                      <DropdownItem to=\"/login-page\" tag={Link}>\n                        Login\n                      </DropdownItem>\n                      <DropdownItem to=\"/register-page\" tag={Link}>\n                        Register\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown> */}\n                  <nav>\n                  <Link  class=\"link dim white    f6 f3-ns dib mr3\"\n                    to=\"/landing-page\" tag={Link} >\n                       Home \n                    </Link>\n                    \n\n                    {/* <Link  class=\"link dim white    f6 f5-ns dib mr3\"\n                    to=\"/home\" tag={Link} >\n                       Home \n                    </Link> */}\n\n                    {/* <Link  class=\"link dim white    f6 f5-ns dib mr3\"\n                    to=\"/dashboard\" tag={Link} >\n                       Dashboard \n                    </Link> */}\n                \n                    {/* <Link to=\"/landing-page\" tag={Link} > Landing </Link> */}\n                    {/* <Link \n                    className=\"link dim white b f6 f5-ns dib mr3\"\n                    to=\"/profile-page\" tag={Link} > Profile </Link> */}\n\n                    {/* <Link  class=\"link dim white    f6 f5-ns dib mr3\"\n                    to=\"/user-profile\" tag={Link} >\n                       User Profile \n                    </Link> */}\n                  \n                    {/* <Link  class=\"link dim white    f6 f5-ns dib mr3\"\n                    to=\"/board-page\" tag={Link} >\n                       Board page \n                    </Link> */}\n                  </nav>\n\n                \n                </Nav>\n\n                \n                <Nav className=\"align-items-lg-center ml-lg-auto\" navbar>\n                  {/* <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://www.facebook.com/creativetim\"\n                      id=\"tooltip333589074\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-facebook-square\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Facebook\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip333589074\">\n                      Like us on Facebook\n                    </UncontrolledTooltip>\n                  </NavItem> */}\n                  {/* <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://www.instagram.com/creativetimofficial\"\n                      id=\"tooltip356693867\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-instagram\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Instagram\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip356693867\">\n                      Follow us on Instagram\n                    </UncontrolledTooltip>\n                  </NavItem> */}\n                  {/* <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://twitter.com/creativetim\"\n                      id=\"tooltip184698705\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-twitter-square\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Twitter\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip184698705\">\n                      Follow us on Twitter\n                    </UncontrolledTooltip>\n                  </NavItem> */}\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://github.com/creativetimofficial/argon-design-system-react\"\n                      id=\"tooltip112445449\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-github\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Github\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip112445449\">\n                      Star us on Github\n                    </UncontrolledTooltip>\n                  </NavItem>\n                  \n                  <Link  class=\"link dim white    f6 f3-ns dib mr3\"\n                    to=\"/login-page\" tag={Link} >\n                       Login \n                    </Link>\n\n                    <Link  class=\"link dim white    f6 f3-ns dib mr3\"\n                    to=\"/register-page\" tag={Link} >\n                       Register \n                    </Link>\n                  {/* <NavItem className=\"d-none d-lg-block ml-lg-4\">\n                    <Button\n                      className=\"btn-neutral btn-icon\"\n                      color=\"default\"\n                      href=\"https://www.creative-tim.com/product/argon-design-system-react?ref=adsr-navbar\"\n                      target=\"_blank\"\n                    >\n                      <span className=\"btn-inner--icon\">\n                        <i className=\"fa fa-cloud-download mr-2\" />\n                      </span> \n                       <span className=\"nav-link-inner--text ml-1\">\n                        Download\n                      </span>\n                    </Button>\n                  </NavItem> */}\n                </Nav>\n              </UncontrolledCollapse>\n            </Container>\n          </Navbar>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default DemoNavbar;\n","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n// reactstrap components\nimport {\n  Button,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nclass SimpleFooter extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\" footer\">\n          <Container>\n            <Row className=\" align-items-center justify-content-md-between\">\n              <Col md=\"6\">\n                <div className=\" copyright\">\n                  © {new Date().getFullYear()}{\" \"}\n                  <a\n                    href=\"https://www.creative-tim.com?ref=adsr-footer\"\n                    target=\"_blank\"\n                  >\n                    Creative Tim\n                  </a>\n                  .\n                </div>\n              </Col>\n              <Col md=\"6\">\n                <Nav className=\" nav-footer justify-content-end\">\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com?ref=adsr-footer\"\n                      target=\"_blank\"\n                    >\n                      Creative Tim\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com/presentation?ref=adsr-footer\"\n                      target=\"_blank\"\n                    >\n                      About Us\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"http://blog.creative-tim.com?ref=adsr-footer\"\n                      target=\"_blank\"\n                    >\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md\"\n                      target=\"_blank\"\n                    >\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default SimpleFooter;\n","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classnames from \"classnames\";\nimport \"animate.css\"\nimport \"../../style.css\"\n\nimport history from '../../history'\n\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  FormGroup,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport DemoNavbar from \"../../components/Navbars/DemoNavbar.js\";\nimport SimpleFooter from \"../../components/Footers/SimpleFooter.js\";\n\n// index page sections\n\nclass Landing extends React.Component {\n  state = {};\n  componentDidMount() {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.main.scrollTop = 0;\n  }\n\n  onSubmit = () =>{\n    history.push('/register-page');\n  }\n  render() {\n    return (\n      <>\n        <DemoNavbar />\n        <main ref=\"main\">\n          <div className=\"position-relative\">\n            {/* shape Hero */}  \n            <section className=\"section1 section-lg pb-250\">  \n            <Container className=\"py-lg-md d-flex\">\n                <div className=\"col px-0\">\n                  <Row>\n                    <Col lg=\"6\">\n                      <h1 className=\"display-3 text-white animate__animated animate__slideInLeft\">\n                      Kanban helps teams work more collaboratively and get more done.{\" \"}\n                        {/* <span>completed with examples</span> */}\n                      </h1>\n                      <h3 className = \"animate__animated animate__bounce\"\n                      className=\"lead text-white animate__animated animate__slideInLeft\">\n                        Kanban's boards, lists, and cards enable teams to organize and prioritize projects in a fun, \n                        flexible, and rewarding way.\n                      </h3>\n                      <div className=\"btn-wrapper\">\n                        {/* <Button\n                          className=\"btn-icon mb-3 mb-sm-0\"\n                          color=\"info\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/alerts?ref=adsr-landing-page\"\n                        >\n                          <span className=\"btn-inner--icon mr-1\">\n                            <i className=\"fa fa-code\" />\n                          </span>\n                          <span className=\"btn-inner--text animate__animated animate__slideInDown\">Explore</span>\n                        </Button> */}\n                        <Button\n                          className=\"btn-white btn-icon mb-3 mb-sm-0 ml-1\"\n                          color=\"default\"\n                          onClick = {this.onSubmit}\n                        >\n                          {/* <span className=\"btn-inner--icon mr-1\">\n                            <i className=\"ni ni-cloud-download-95\" />\n                          </span> */}\n                          <span className=\" animate__animated animate__slideInUp\">\n                            Sign Up\n                          </span>\n                        </Button>\n                      </div>\n                    </Col>\n                    <Col>\n                    <img className = \"landingImage img-img animate__animated animate__slideInRight\" src={require(\"../../assets/img/theme/image3.png\")}\n                    style={{ width: \"600px\", height:\"auto\" }} />\n                    </Col>\n                  </Row>\n                </div>\n              </Container>\n            </section>\n          </div>  \n          \n          {/* <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-white\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div> */}\n\n\n          <section className=\"section section-lg bg-gradient-warning\">\n            <Container>\n              <Row className=\"row-grid align-items-center\">\n                <Col className=\"order-md-2\" md=\"6\">\n                  <img\n                    alt=\"...\"\n                    className=\"img-fluid floating img-img\"\n                    src={require(\"../../assets/img/theme/girl-work-on-laptop-1792788-1519329.png\")}\n                  />\n                </Col>\n                <Col className=\"order-md-1\" md=\"6\" style ={{color:\"white\"}}>\n                  <div className=\"pr-md-5\">\n                    <div className=\"icon icon-lg icon-shape icon-shape-success shadow rounded-circle mb-5\">\n                      <i className=\"ni ni-settings-gear-65\" />\n                    </div>\n                    <h1 className=\"display-3 text-white animate__animated animate__slideInLeft\">About Kanban</h1>\n                    <h3 className=\"lead text-white animate__animated animate__slideInLeft\">\n                    A Kanban board is one of the tools that can be used to implement Kanban to manage work \n                    at a personal or organizational level. Kanban boards visually depict work at various \n                    stages of a process using cards to represent work items and columns to represent each stage of the process.\n                    </h3>\n                    <ul className=\"list-unstyled mt-5\">\n                      <li className=\"py-2\">\n                        <div className=\"d-flex align-items-center\">\n                          <div>\n                            <Badge\n                              className=\"badge-circle mr-3\"\n                              color=\"success\"\n                            >\n                              <i className=\"ni ni-settings-gear-65\" />\n                            </Badge>\n                          </div>\n                          <div>\n                            <h6 className=\"mb-0 animate__animated animate__slideInLeft\">\n                              Carefully crafted components\n                            </h6>\n                          </div>\n                        </div>\n                      </li>\n                      <li className=\"py-2\">\n                        <div className=\"d-flex align-items-center\">\n                          <div>\n                            <Badge\n                              className=\"badge-circle mr-3\"\n                              color=\"success\"\n                            >\n                              <i className=\"ni ni-html5\" />\n                            </Badge>\n                          </div>\n                          <div>\n                            <h6 className=\"mb-0 animate__animated animate__slideInLeft\">Amazing page examples</h6>\n                          </div>\n                        </div>\n                      </li>\n                      <li className=\"py-2\">\n                        <div className=\"d-flex align-items-center\">\n                          <div>\n                            <Badge\n                              className=\"badge-circle mr-3\"\n                              color=\"success\"\n                            >\n                              <i className=\"ni ni-satisfied\" />\n                            </Badge>\n                          </div>\n                          <div>\n                            <h6 className=\"mb-0 animate__animated animate__slideInLeft\">\n                              Super friendly support team\n                            </h6>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </section>\n\n          \n          <section className=\"section transBack\">\n            <Container>\n              <Row className=\"row-grid align-items-center\">\n                <Col md=\"6\">\n                  <Card className=\"bg-default shadow border-0 animate__animated animate__slideInRight\">\n                    <CardImg\n                      alt=\"...\"\n                      src={require(\"../../assets/img/theme/img-1-1200x1000.jpg\")}\n                      top\n                    />\n                    <blockquote className=\"card-blockquote\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"svg-bg\"\n                        preserveAspectRatio=\"none\"\n                        viewBox=\"0 0 583 95\"\n                      >\n                        <polygon\n                          className=\"fill-default\"\n                          points=\"0,52 583,95 0,95\"\n                        />\n                        <polygon\n                          className=\"fill-default\"\n                          opacity=\".2\"\n                          points=\"0,42 583,95 683,0 0,95\"\n                        />\n                      </svg>\n                      <h4 className=\"display-3 font-weight-bold text-white\">\n                        Design System\n                      </h4>\n                      <p className=\"lead text-italic text-white\">\n                        The Arctic Ocean freezes every winter and much of the\n                        sea-ice then thaws every summer, and that process will\n                        continue whatever happens.\n                      </p>\n                    </blockquote>\n                  </Card>\n                </Col>\n                <Col md=\"6\">\n                  <div className=\"pl-md-5\">\n                    <div className=\"icon icon-lg icon-shape icon-shape-warning shadow rounded-circle mb-5\">\n                      <i className=\"ni ni-settings\" />\n                    </div>\n                    <h3>Our customers</h3>\n                    <p className=\"lead\">\n                      Don't let your uses guess by attaching tooltips and\n                      popoves to any element. Just make sure you enable them\n                      first via JavaScript.\n                    </p>\n                    <p>\n                      The kit comes with three pre-built pages to help you get\n                      started faster. You can change the text and images and\n                      you're good to go.\n                    </p>\n                    <p>\n                      The kit comes with three pre-built pages to help you get\n                      started faster. You can change the text and images and\n                      you're good to go.\n                    </p>\n                    <a\n                      className=\"font-weight-bold text-warning mt-5\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      A beautiful UI Kit for impactful websites\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </section>\n          <section className=\"section pb-0 bg-gradient-warning\">\n            <Container>\n              <Row className=\"row-grid align-items-center\">\n                <Col className=\"order-lg-2 ml-lg-auto\" md=\"6\">\n                  <div className=\"position-relative pl-md-5\">\n                    <img\n                      alt=\"...\"\n                      className=\"img-center img-fluid\"\n                      src={require(\"../../assets/img/ill/ill-2.svg\")}\n                      \n                    />\n                  </div>\n                </Col>\n                <Col className=\"order-lg-1\" lg=\"6\">\n                  <div className=\"d-flex px-3\">\n                    <div>\n                      <div className=\"icon icon-lg icon-shape bg-gradient-white shadow rounded-circle text-primary\">\n                        <i className=\"ni ni-building text-primary\" />\n                      </div>\n                    </div>\n                    <div className=\"pl-4\">\n                      <h4 className=\"display-3 text-white\">Modern Interface</h4>\n                      <p className=\"text-white\">\n                        The Arctic Ocean freezes every winter and much of the\n                        sea-ice then thaws every summer, and that process will\n                        continue whatever.\n                      </p>\n                    </div>\n                  </div>\n                  <Card className=\"shadow shadow-lg--hover mt-5\">\n                    <CardBody>\n                      <div className=\"d-flex px-3\">\n                        <div>\n                          <div className=\"icon icon-shape bg-gradient-success rounded-circle text-white\">\n                            <i className=\"ni ni-satisfied\" />\n                          </div>\n                        </div>\n                        <div className=\"pl-4\">\n                          <h5 className=\"title text-success\">\n                            Awesome Support\n                          </h5>\n                          <p>\n                            The Arctic Ocean freezes every winter and much of\n                            the sea-ice then thaws every summer, and that\n                            process will continue whatever.\n                          </p>\n                          <a\n                            className=\"text-success\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            Learn more\n                          </a>\n                        </div>\n                      </div>\n                    </CardBody>\n                  </Card>\n                  <Card className=\"shadow shadow-lg--hover mt-5\">\n                    <CardBody>\n                      <div className=\"d-flex px-3\">\n                        <div>\n                          <div className=\"icon icon-shape bg-gradient-warning rounded-circle text-white\">\n                            <i className=\"ni ni-active-40\" />\n                          </div>\n                        </div>\n                        <div className=\"pl-4\">\n                          <h5 className=\"title text-warning\">\n                            Modular Components\n                          </h5>\n                          <p>\n                            The Arctic Ocean freezes every winter and much of\n                            the sea-ice then thaws every summer, and that\n                            process will continue whatever.\n                          </p>\n                          <a\n                            className=\"text-warning\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            Learn more\n                          </a>\n                        </div>\n                      </div>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n            {/* SVG separator */}\n            {/* <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-white\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div> */}\n\n          </section>\n\n          \n          {/* <section className=\"section section-lg bg-gradient-default\">\n            <Container className=\"pt-lg pb-300\">\n              <Row className=\"text-center justify-content-center\">\n                <Col lg=\"10\">\n                  <h2 className=\"display-3 text-white\">Build something</h2>\n                  <p className=\"lead text-white\">\n                    According to the National Oceanic and Atmospheric\n                    Administration, Ted, Scambos, NSIDClead scentist, puts the\n                    potentially record low maximum sea ice extent tihs year down\n                    to low ice.\n                  </p>\n                </Col>\n              </Row>\n              <Row className=\"row-grid mt-5\">\n                <Col lg=\"4\">\n                  <div className=\"icon icon-lg icon-shape bg-gradient-white shadow rounded-circle text-primary\">\n                    <i className=\"ni ni-settings text-primary\" />\n                  </div>\n                  <h5 className=\"text-white mt-3\">Building tools</h5>\n                  <p className=\"text-white mt-3\">\n                    Some quick example text to build on the card title and make\n                    up the bulk of the card's content.\n                  </p>\n                </Col>\n                <Col lg=\"4\">\n                  <div className=\"icon icon-lg icon-shape bg-gradient-white shadow rounded-circle text-primary\">\n                    <i className=\"ni ni-ruler-pencil text-primary\" />\n                  </div>\n                  <h5 className=\"text-white mt-3\">Grow your market</h5>\n                  <p className=\"text-white mt-3\">\n                    Some quick example text to build on the card title and make\n                    up the bulk of the card's content.\n                  </p>\n                </Col>\n                <Col lg=\"4\">\n                  <div className=\"icon icon-lg icon-shape bg-gradient-white shadow rounded-circle text-primary\">\n                    <i className=\"ni ni-atom text-primary\" />\n                  </div>\n                  <h5 className=\"text-white mt-3\">Launch time</h5>\n                  <p className=\"text-white mt-3\">\n                    Some quick example text to build on the card title and make\n                    up the bulk of the card's content.\n                  </p>\n                </Col>\n              </Row>\n            </Container>\n          </section> */}\n\n\n          {/* <section className=\"section section-lg pt-lg-0 section-contact-us\">\n            <Container>\n              <Row className=\"justify-content-center mt--300\">\n                <Col lg=\"8\">\n                  <Card className=\"bg-gradient-secondary shadow\">\n                    <CardBody className=\"p-lg-5\">\n                      <h4 className=\"mb-1\">Want to work with us?</h4>\n                      <p className=\"mt-0\">\n                        Your project is very important to us.\n                      </p>\n                      <FormGroup\n                        className={classnames(\"mt-5\", {\n                          focused: this.state.nameFocused\n                        })}\n                      >\n                        <InputGroup className=\"input-group-alternative\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"ni ni-user-run\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            placeholder=\"Your name\"\n                            type=\"text\"\n                            onFocus={e => this.setState({ nameFocused: true })}\n                            onBlur={e => this.setState({ nameFocused: false })}\n                          />\n                        </InputGroup>\n                      </FormGroup>\n                      <FormGroup\n                        className={classnames({\n                          focused: this.state.emailFocused\n                        })}\n                      >\n                        <InputGroup className=\"input-group-alternative\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"ni ni-email-83\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            placeholder=\"Email address\"\n                            type=\"email\"\n                            onFocus={e => this.setState({ emailFocused: true })}\n                            onBlur={e => this.setState({ emailFocused: false })}\n                          />\n                        </InputGroup>\n                      </FormGroup>\n                      <FormGroup className=\"mb-4\">\n                        <Input\n                          className=\"form-control-alternative\"\n                          cols=\"80\"\n                          name=\"name\"\n                          placeholder=\"Type a message...\"\n                          rows=\"4\"\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                      <div>\n                        <Button\n                          block\n                          className=\"btn-round\"\n                          color=\"default\"\n                          size=\"lg\"\n                          type=\"button\"\n                        >\n                          Send Message\n                        </Button>\n                      </div>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          </section> */}\n        </main>\n        <SimpleFooter />       \n      </>\n    );\n  }\n}\n\nexport default Landing;\n","var UserData = (function () {\n\n  var getToken = function () {\n    return localStorage.getItem(\"token\");    // Or pull this from cookie/localStorage\n  };\n\n\n\n  var removeToken = function () {\n    localStorage.removeItem(\"token\", \"userName\", \"userid\")\n  }\n\n\n  var setCurrentBoardData = function(data) {\n    localStorage.setItem(\"boardId\", data.boardid);\n    localStorage.setItem(\"boardTitle\", data.boardname);\n  }\n \n  var setCurrentBoardLists = function(data) {\n    localStorage[\"lists\"] = JSON.stringify(data);\n  }\n\n  var getCurrentBoardLists =function(){\n   return  JSON.parse(localStorage.getItem(\"lists\"))\n  }\n\n  var updateCurrentBoardTitle = function(data) {\n    localStorage.setItem(\"boardTitle\", data);\n  }\n \n  \n  var getCurrentBoardTitle =function() {\n    return localStorage.getItem(\"boardTitle\")\n  }\n\n  var getCurrentBoardId =function() {\n    return localStorage.getItem(\"boardId\")\n  }\n\n  var setUserData = function (data) {\n    localStorage.setItem(\"token\", data.token);\n    localStorage.setItem(\"userName\", data.user.username);\n    localStorage.setItem(\"userId\", data.user.id)\n  }\n\n  var getName = function () {\n    return localStorage.getItem(\"userName\")\n  }\n\n  var getId = function () {\n    return localStorage.getItem(\"userId\")\n  }\n  return {\n    setUserData: setUserData,\n    removeToken: removeToken,\n    getToken: getToken,\n    getName: getName,\n    getId: getId,\n    setCurrentBoardData:setCurrentBoardData,\n    getCurrentBoardTitle:getCurrentBoardTitle,\n    getCurrentBoardId:getCurrentBoardId,\n    setCurrentBoardLists:setCurrentBoardLists,\n    getCurrentBoardLists:getCurrentBoardLists,\n    updateCurrentBoardTitle:updateCurrentBoardTitle\n  }\n\n})();\n\nexport default UserData;","const loadUserAction =(userId, userName, email, idToken) =>{\n    return {\n        type:\"LOAD_USER\",\n        payload:{\n            userId,\n            userName,\n            email,\n            idToken\n        }\n    }\n}\n\nexport default loadUserAction;","const firebase = require(\"firebase\")\n\n\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n\nexport {\n    provider, firebase\n}\n","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport history from '../../history'\nimport UserData from './UserData'\n// import { BrowserRouter as Router } from 'react-router-dom'\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// import {withRouter} from 'react-router'\n// core components\nimport DemoNavbar from \"../../components/Navbars/DemoNavbar.js\";\nimport SimpleFooter from \"../../components/Footers/SimpleFooter.js\";\nimport { connect } from \"react-redux\"\nimport loadUserAction from \"../../redux/actions/loadUserAction\";\nimport {provider, firebase} from \"../../fbConfig\"\n\nclass Login extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n\n\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value })\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value })\n  }\n\n  handleLoadUser = (data) => {\n    this.props.loadUser(data.user.id, data.user.username, data.user.email, data.token)\n  }\n\n  onSubmit = () => {\n    const bodyContent = JSON.stringify({\n      email: this.state.email,\n      password: this.state.password\n    });\n\n    fetch('https://git.heroku.com/stark-anchorage-18510.git/login-page', {\n      method: \"post\",\n      headers: { 'Content-Type': 'application/json' },\n      body: bodyContent\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data) {\n          UserData.setUserData(data)\n          this.handleLoadUser(data);\n          history.push('/user-profile');\n        }\n        else {\n          alert(\"failed to signin\");\n        }\n      }\n      )\n      .catch(err => {\n        console.log(\"Failed to load the user \" + err)\n      })\n  }\n\n\n  onSignIn =(googleUser) =>{\n    alert(JSON.stringify(googleUser))\n\n    var profile = googleUser.getBasicProfile();\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName());\n    console.log('Image URL: ' + profile.getImageUrl());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n  }\n\n\n  \n\n\n  componentDidMount() {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.main.scrollTop = 0;\n  }\n  render() {\n    return (\n      <>\n        <main ref=\"main\">\n          <Container className=\"pt-lg-7\">\n            <Row className=\"justify-content-center\">\n              <Col>\n                <img\n                  className=\"animate__animated animate__slideInLeft\"\n                  src={require(\"../../assets/img/theme/image1.png\")}\n                />\n              </Col>\n              <Col lg=\"5\">\n                <Card className=\"bg-secondary shadow border-0\">\n                  <CardHeader className=\"bg-white pb-5\">\n                    <div className=\"text-muted text-center mb-3\">\n                      <small>Sign in with</small>\n                    </div>\n                    <div className=\"btn-wrapper text-center\">\n                      <Button\n                        className=\"btn-neutral btn-icon\"\n                        color=\"default\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                      >\n                        <span className=\"btn-inner--icon mr-1\">\n                          <img\n                            alt=\"...\"\n                            src={require(\"../../assets/img/icons/common/github.svg\")}\n                          />\n                        </span>\n                        <span className=\"btn-inner--text\">Github</span>\n                      </Button>\n                      <Button\n                        className=\"btn-neutral btn-icon ml-1\"\n                        color=\"default\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                      >\n                        <span className=\"btn-inner--icon mr-1\">\n                          <img\n                            alt=\"...\"\n                            src={require(\"../../assets/img/icons/common/google.svg\")}\n                          />\n                        </span>\n                        <span className=\"btn-inner--text\"\n                        onClick ={this.onSignIn}>Google</span>\n                      </Button>\n                    </div>\n                  </CardHeader>\n                  <CardBody className=\"px-lg-5 py-lg-5\">\n                    <div className=\"text-center text-muted mb-4\">\n                      <small>Or sign in with credentials</small>\n                    </div>\n                    <Form role=\"form\">\n                      <FormGroup className=\"mb-3\">\n                        <InputGroup className=\"input-group-alternative\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"ni ni-email-83\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          {/* I have added onChange method into email input */}\n                          <Input onChange={this.onEmailChange} placeholder=\"Email\" type=\"email\" />\n\n                        </InputGroup>\n                      </FormGroup>\n                      <FormGroup>\n                        <InputGroup className=\"input-group-alternative\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"ni ni-lock-circle-open\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n\n                          {/* I have added  onPasswordChange method to the password input*/}\n                          <Input\n                            onChange={this.onPasswordChange}\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            autoComplete=\"off\"\n                          />\n\n                        </InputGroup>\n                      </FormGroup>\n                      <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                        <input\n                          className=\"custom-control-input\"\n                          id=\" customCheckLogin\"\n                          type=\"checkbox\"\n                        />\n                        <label\n                          className=\"custom-control-label\"\n                          htmlFor=\" customCheckLogin\"\n                        >\n                          <span>Remember me</span>\n                        </label>\n                      </div>\n                      <div className=\"text-center\">\n\n                        {/* Added the onSubmit method into the button */}\n                        <Button\n                          onClick={this.onSubmit}\n                          className=\"my-4\"\n                          color=\"primary\"\n                          type=\"button\"\n                        >\n                          Sign in\n                          </Button>\n\n\n                      </div>\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Row className=\"mt-3\">\n                  <Col xs=\"6\">\n                    <a\n                      className=\"text-light\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      <small>Forgot password?</small>\n                    </a>\n                  </Col>\n                  <Col className=\"text-right\" xs=\"6\">\n                    <a\n                      className=\"text-light\"\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      <small>Create new account</small>\n                    </a>\n                  </Col>\n                </Row>\n              </Col>\n\n            </Row>\n  \n          </Container>\n          <SimpleFooter/>\n        </main>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadUser: (userId, userName, email, idToken) => dispatch(loadUserAction(userId, userName, email, idToken))\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport history from \"../../history\"\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {connect}  from \"react-redux\"\nimport loadUserAction from \"../../redux/actions/loadUserAction\";\n\nclass Register extends React.Component {\n  constructor(){\n      super()\n      this.state ={\n        name: '',\n        mail: '',\n        password:''\n      }\n  }\n  onEmailChange = (event) =>{\n    this.setState({email: event.target.value})\n }\n\n onPasswordChange = (event) =>{\n    this.setState({password: event.target.value})\n }\n\n onNameChange = (event) =>{\n  this.setState({name: event.target.value})\n}\n\nhandleLoadUser =(data) =>{\n  this.props.loadUser(data.user.id, data.user.username, data.user.email, data.token)\n}\n\n onSubmit = () =>{\n   const bodyContent = JSON.stringify({\n     name: this.state.name,\n     email: this.state.email,\n     password: this.state.password\n   });\n\n   fetch('https://git.heroku.com/stark-anchorage-18510.git/register-page',{\n     method: \"post\",\n     headers: {'Content-Type': 'application/json'},\n     body: bodyContent\n   })\n   .then(response => response.json())\n   .then(data =>{\n    if(data){\n        this.handleLoadUser(data);\n        history.push('/user-profile')\n       \n    }\n    else{\n        alert(\"failed to register\");\n    }\n    \n})\n.catch(err=>{\n  console.log(\"Failed to load the user \"+ err)\n})\n }\n\n  componentDidMount() {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.main.scrollTop = 0;\n  }\n  render() {\n    return (\n      <>\n        <main ref=\"main\">\n            <Container className=\"pt-lg-7\">\n              <Row className=\"justify-content-center\">\n                <Col lg=\"5\">\n                  <Card className=\"bg-secondary shadow border-0\">\n                    <CardHeader className=\"bg-white pb-5\">\n                      <div className=\"text-muted text-center mb-3\">\n                        <small>Sign up with</small>\n                      </div>\n                      <div className=\"text-center\">\n                        <Button\n                          className=\"btn-neutral btn-icon mr-4\"\n                          color=\"default\"\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          <span className=\"btn-inner--icon mr-1\">\n                            <img\n                              alt=\"...\"\n                              src={require(\"../../assets/img/icons/common/github.svg\")}\n                            />\n                          </span>\n                          <span className=\"btn-inner--text\">Github</span>\n                        </Button>\n                        <Button\n                          className=\"btn-neutral btn-icon ml-1\"\n                          color=\"default\"\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          <span className=\"btn-inner--icon mr-1\">\n                            <img\n                              alt=\"...\"\n                              src={require(\"../../assets/img/icons/common/google.svg\")}\n                            />\n                          </span>\n                          <span className=\"btn-inner--text\">Google</span>\n                        </Button>\n                      </div>\n                    </CardHeader>\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                      <div className=\"text-center text-muted mb-4\">\n                        <small>Or sign up with credentials</small>\n                      </div>\n                      <Form role=\"form\">\n                        <FormGroup>\n                          <InputGroup className=\"input-group-alternative mb-3\">\n                            <InputGroupAddon addonType=\"prepend\">\n                              <InputGroupText>\n                                <i className=\"ni ni-hat-3\" />\n                              </InputGroupText>\n                            </InputGroupAddon>\n\n                        {/* Added onChange method into the input */}\n                            <Input \n                            onChange = {this.onNameChange}\n                            placeholder=\"Name\" \n                            type=\"text\" \n                            />\n\n                          </InputGroup>\n                        </FormGroup>\n                        <FormGroup>\n                          <InputGroup className=\"input-group-alternative mb-3\">\n                            <InputGroupAddon addonType=\"prepend\">\n                              <InputGroupText>\n                                <i className=\"ni ni-email-83\" />\n                              </InputGroupText>\n                            </InputGroupAddon>\n                          {/* Added onEmailChange method into the input */}\n                            <Input \n                            onChange = {this.onEmailChange}\n                            placeholder=\"Email\" \n                            type=\"email\" \n                            />\n\n                          </InputGroup>\n                        </FormGroup>\n                        <FormGroup>\n                          <InputGroup className=\"input-group-alternative\">\n                            <InputGroupAddon addonType=\"prepend\">\n                              <InputGroupText>\n                                <i className=\"ni ni-lock-circle-open\" />\n                              </InputGroupText>\n                            </InputGroupAddon>\n\n                        {/* Added onPasswordChange method into the input */}\n                            <Input\n                              onChange = {this.onPasswordChange}\n                              placeholder=\"Password\"\n                              type=\"password\"\n                              autoComplete=\"off\"\n                            />\n\n                          </InputGroup>\n                        </FormGroup>\n                        <div className=\"text-muted font-italic\">\n                          <small>\n                            password strength:{\" \"}\n                            <span className=\"text-success font-weight-700\">\n                              strong\n                            </span>\n                          </small>\n                        </div>\n                        <Row className=\"my-4\">\n                          <Col xs=\"12\">\n                            <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                              <input\n                                className=\"custom-control-input\"\n                                id=\"customCheckRegister\"\n                                type=\"checkbox\"\n                              />\n                              <label\n                                className=\"custom-control-label\"\n                                htmlFor=\"customCheckRegister\"\n                              >\n                                <span>\n                                  I agree with the{\" \"}\n                                  <a\n                                    href=\"#pablo\"\n                                    onClick={e => e.preventDefault()}\n                                  >\n                                    Privacy Policy\n                                  </a>\n                                </span>\n                              </label>\n                            </div>\n                          </Col>\n                        </Row>\n                        <div className=\"text-center\">\n\n                      {/* Added onSubmit into the button */}\n                          <Button\n                            onClick = {this.onSubmit}\n                            className=\"mt-4\"\n                            color=\"primary\"\n                            type=\"button\"\n                          >\n                            Create account\n                          </Button>\n                        </div>\n                      </Form>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col>\n                    <img \n                    className =\"animate__animated animate__slideInRight\"\n                    src={require(\"../../assets/img/theme/image2.png\")}/>\n                </Col>\n              </Row>\n            </Container>\n        </main>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps =(state) =>{\n  return {\n      user:state.user\n  }\n}\n\nconst mapDispatchToProps =(dispatch) =>{\n  return {\n    loadUser:( userId, userName, email, idToken) => dispatch(loadUserAction(userId, userName, email, idToken))\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","\nconst createBoardAction =(boardTitle, boardId) =>{\n    return {\n        type: \"CREATE_BOARD\",\n        payload :{\n            boardTitle,\n            boardId\n        }\n    }\n}\n\nexport default createBoardAction;","\nconst loadBoardsAction = ( userId, idToken) =>(dispatch) =>{\n    const bodyContent = JSON.stringify({\n        userId: userId\n      });\n    dispatch({type: \"LOAD_BOARDS_PENDING\"});\n    fetch('http://localhost:3001/loadBoards',\n      {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json',\n          \"Authorization\": idToken\n        },\n        body:bodyContent\n      })\n      .then(response =>{\n        return response.json()\n      })\n      .then(data => dispatch({type:\"LOAD_BOARDS_SUCCESS\", payload:data}))\n      .catch(error => dispatch({type: 'LOAD_BOARDS_FAILED', payload:error }))\n       \n}\n\n\nexport default loadBoardsAction;","const loadCurrentBoardListAction =(boardId, idToken) =>(dispatch) =>{\n\n    dispatch({type: \"LOAD_CURRENT_BOARD_LIST_PENDING\"});\n    fetch('http://localhost:3001/loadCurrentBoardList',\n      {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json',\n          \"Authorization\": idToken\n        },\n        body:JSON.stringify({\n            boardId: boardId\n          })\n      })\n      .then(response =>{\n        return response.json()\n      })\n      .then(async lists => {     \n        console.log(\"hello \" + lists) \n        await Promise.all(lists.map(async list => {\n            let response = await fetch('http://localhost:3001/loadCards',\n                {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        \"Authorization\": idToken\n                    },\n                    body: JSON.stringify({\n                        listId: list.listid\n                    })\n                });\n            let newcards = await response.json()\n            list.cards  = newcards\n        }))\n\n        console.log(\"lists \" + JSON.stringify(lists))\n        return lists;\n    })\n      .then(data => dispatch({type:\"LOAD_CURRENT_BOARD_LIST_SUCCESS\", payload:data}))\n      .catch(error => dispatch({type: 'LOAD_CURRENT_BOARD_LIST_FAILED', payload:error }))\n}\n\nexport default loadCurrentBoardListAction;","\n\n\nconst loadListsAction = (boardId, idToken) => (dispatch) => {\n    const bodyContent = JSON.stringify({\n        boardId: boardId\n    })\n    dispatch({ type: \"LOAD_LISTS_PENDING\" });\n    fetch('http://localhost:3001/loadLists',\n        {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": idToken\n            },\n            body: bodyContent\n        })\n        .then(response => {\n            return response.json()\n        })\n        .then(async lists => {     \n            console.log(\"hello \" + lists) \n            await Promise.all(lists.map(async list => {\n                let response = await fetch('http://localhost:3001/loadCards',\n                    {\n                        method: 'post',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            \"Authorization\": idToken\n                        },\n                        body: JSON.stringify({\n                            listId: list.listid\n                        })\n                    });\n                let newcards = await response.json()\n                list.cards  = newcards\n            }))\n\n            console.log(\"lists \" + JSON.stringify(lists))\n            return lists;\n        })\n        .then(lists => dispatch({ type: \"LOAD_LISTS_SUCCESS\", payload: { lists, boardId } }))\n        .catch(error => dispatch({ type: 'LOAD_LISTS_FAILED', payload: error }))\n\n\n}\n\nexport default loadListsAction;","const removeCurrentBoardDataAction =() =>{\n    return {\n        type:'REMOVE_CURRENT_BOARD_DATA'\n    }\n}\n\n    \nexport default removeCurrentBoardDataAction;","const addNewBoardAction =(board) =>{\n    return {\n        type:'ADD_NEW_BOARD',\n        payload:board\n    }\n}\n\nexport default addNewBoardAction;","\n\nimport React from \"react\"\nimport \"tachyons\"\nimport Modal from \"react-modal\";\nimport history from '../../history'\nimport { connect } from \"react-redux\"\nimport createBoardAction from \"../../redux/actions/createBoardAction\"\nimport \"../../style.css\"\nimport { Redirect } from \"react-router-dom\"\nimport loadBoardsAction from \"../../redux/actions/loadBoardsAction\"\nimport Scroll from \"./Scroll\"\nimport { Spinner } from 'reactstrap';\nimport UserData from \"./UserData\";\nimport loadCurrentBoardListAction from \"../../redux/actions/loadCurrentBoardListAction\"\nimport loadListsAction from \"../../redux/actions/loadListsAction\"\nimport removeCurrentBoardDataAction from \"../../redux/actions/removeCurrentBoardDataAction\"\nimport addNewBoardAction from \"../../redux/actions/addNewBoardAction\"\n\nimport {\n  Button,\n  Container,\n  Row,\n  Card,\n  Col\n} from \"reactstrap\";\n\n\n// import Modal from 'react-bootstrap/Modal'\n\n\nModal.setAppElement(\"#root\")\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modalIsOpen: false,\n      setModalIsOpen: true,\n      inputValue: \"\",\n      user: {\n        id: \"\",\n        name: \"\"\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.boards.length === 0) {\n       this.props.loadBoards(UserData.getId(), UserData.getToken());\n    }\n\n    // if(this.props.boards.length < boards.length){\n    //   this.props.addNewBoard(this.props.loadBoards(UserData.getId(), UserData.getToken())[this.props.loadBoards(UserData.getId(), UserData.getToken()).length-1])\n    // }\n\n\n    // this.props.loadBoards(UserData.getId(), UserData.getToken());\n  }\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true })\n  }\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false })\n  }\n\n  inputOnChange = (event) => {\n    this.setState({ inputValue: event.target.value })\n  }\n\n  handleClick = () => {\n    this.setState({ modalIsOpen: false })\n    let bodyContent = JSON.stringify({\n      boardTitle: this.state.inputValue,\n      userId: UserData.getId()\n    })\n\n    if (this.state.inputValue.length > 0) {\n      fetch('https://git.heroku.com/stark-anchorage-18510.git/createBoard',\n        {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            \"Authorization\": UserData.getToken()\n          },\n          body: bodyContent\n        })\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          if (data) {\n            this.props.createBoard(data.boardname, data.boardid)\n            UserData.setCurrentBoardData(data);\n            history.push(`/board-page/${data.boardid}`)\n            \n          }\n          else {\n            alert(\"failed to create a board\")\n          }\n        })\n    }\n    else {\n      alert(\"please add a board name\")\n      this.setState({ modalIsOpen: true })\n    }\n\n  }\n\n\n\n  goToBoard = (boardId) => {\n    let boardTitle = '';\n    this.props.boards.map(board =>{\n        if(board.boardId === boardId) {\n          boardTitle = board.boardTitle\n        }\n    })\n    let data = {\n      \"boardid\": boardId,\n      \"boardname\": boardTitle\n    }\n\n    UserData.setCurrentBoardData(data);\n    history.push(`/board-page/${boardId}`)\n\n    // this.props.loadCurrentBoardList(boardId, UserData.getToken())\n    \n  }\n\n  render() {\n    const { boards } = this.props\n    if (UserData.getToken()) {\n      return (\n        <>\n          <nav className=\"dt w-100 border-box ph5-ns b--white-10\">\n            <a className=\"dtc v-mid mid-gray link dim w-25\" href=\"#\" title=\"Home\">\n              <img src=\"http://tachyons.io/img/logo.jpg\" className=\"dib w2 h2 br-100\" alt=\"Site Name\" />\n            </a>\n            <div className=\"dtc v-mid w-75 tr\">\n              {/* <a className=\"link dim white f6 f5-ns dib mr3 mr4-ns\" href=\"#\" title=\"boar\">Boards</a> */}\n              <a className=\"link dim white f6 f5-ns dib mr3 mr4-ns\" href='/landing-page' title=\"Home\">Home</a>\n            </div>\n          </nav>\n          <div className=\"boardTitle\">Welcome {UserData.getName()} </div>\n          <section className=\"section section-lg\">\n            <Container className=\"py-lg-md d-flex\" >\n              <div className=\"col px-0\">\n                  <main ref=\"main\">\n                    <div className=\"position-relative\">\n                      {/* shape Hero */}\n                    </div>\n                  </main>\n                  <Button variant=\"primary\" onClick={this.openModal}>\n                    + Create a board\n                </Button>\n\n\n                  <Modal isOpen={this.state.modalIsOpen} onHide={this.closeModal} className=\"center mw5 mw6-ns hidden ba mv4 pa3 bt\">\n                    {/* <h2>Board title</h2> */}\n                    <input\n                      id=\"name\"\n                      className=\"input-reset ba b--black-20 pa2 mb2 db w-100\"\n                      type=\"text\" aria-describedby=\"name-desc\"\n                      placeholder=\"Board title\"\n                      onChange={this.inputOnChange}\n                    />\n                    <p>Board body</p>\n                    <Button variant=\"primary\" onClick={this.closeModal}>\n                      X\n                  </Button>\n                    <Button variant=\"primary\" onClick={this.handleClick}>\n                      ADD\n                </Button>\n                  </Modal>\n              </div>\n            </Container>\n          </section>\n\n          {this.props.isBoardsPending ?\n            <div>\n              <h1>Loading</h1>\n              <Spinner color=\"warning\" />\n            </div>\n            :\n              <Row className=\"cardContainer\">\n\n                {boards.length > 0 ?\n                  boards.map((board, i) => {\n                    return (\n                      <Card className=\"text-center  cards cardTitle\" key={i} onClick={() => this.goToBoard(board.boardId)}>\n                        {board.boardTitle}\n                      </Card>\n                    )\n                  }) :\n                  null\n                }\n              </Row>\n          }\n        </>\n\n      )\n    }\n    else {\n      return (\n        <Redirect to=\"/login-page\" />\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boards: state.boards,\n    user: state.user,\n    isBoardsPending: state.isBoardsPending,\n    boardsLoadError: state.boardsLoadError,\n    currentBoard:state.currentBoard\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createBoard: (boardTitle, boardId) => dispatch(createBoardAction(boardTitle, boardId)),\n    loadBoards: (userId, idToken) => dispatch(loadBoardsAction(userId, idToken)),\n    loadCurrentBoardList:(boardId, idToken) =>dispatch(loadCurrentBoardListAction(boardId,idToken)),\n    loadLists: (boardId, idToken) => dispatch(loadListsAction(boardId, idToken)),\n    removeCurrentBoardData: () => dispatch(removeCurrentBoardDataAction()),\n    addNewBoard:(board) => dispatch(addNewBoardAction(board))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);"," import React from \"react\"\nimport {Button} from \"reactstrap\"\nimport \"tachyons\"\nimport \"../../style.css\"\n\n\n class CardList extends React.Component {\n     render() {\n         return(   \n            // <div className =\"center mw5 mw6-ns hidden ba mv4 pa3 bt\">\n            <div className = \"f5 f4-ns mv0 list-header\" onClick = {this.props.changeListEditMode}>{this.props.title}</div>\n            // {/* <div onDrop ={this.props.dropCard} onDragOver = {this.props.dragOver1} >\n            //     {this.props.children}\n            // </div>      */}\n         )\n     }\n }\n\n export default CardList;","const createListAction =(listTitle, boardId, listId) =>{\n    return {\n        type: \"CREATE_LIST\",\n        payload:{\n            listTitle,\n            boardId,\n            listId\n        }\n    }\n}\n\nexport default createListAction;","import React from \"react\";\nimport {Button} from \"reactstrap\"\n\n\n\n\n\nclass Card extends React.Component{\n    // constructor(){\n    //     this.state ={\n    //         input:\"\",\n    //         cards:[]\n    //     }\n    // }\n\n    // cardTitleOnChange = (event) =>{\n    //     if(event.target.value.length >0){\n    //         this.setState({input:event.target.value})\n    //     }\n       \n    // }\n\n    // addCard = () =>{\n    //     this.setState(prevState =>{\n    //         prevState.cards.push(prevState.input)\n    //         this.setState({cards:prevState.cards})\n    //     })\n    //  }\n\n    render() {\n        return(\n            <>\n                <input \n                    id=\"name\" \n                    className=\"input-reset ba b--black-20 pa2 mb2 db w-100\" \n                    type=\"text\" aria-describedby=\"name-desc\" \n                    placeholder =\"Enter a title for this card...\"\n                    onChange = {this.props.cardTitleOnChange}\n                />      \n                <Button variant=\"primary\" onClick = {this.props.addCard}>\n                    ADD\n                </Button>\n                <Button variant=\"primary\">\n                    X\n                </Button>\n            </>\n        );\n    }\n}\nexport default Card;\n\n           ","const createCardAction =(cardContent, listId, boardId, cardId) =>{\n   return {\n       type:\"CREATE_CARD\",\n       payload:{\n           cardContent,\n           listId,\n           boardId,\n           cardId\n       }\n   }\n}\n\nexport default createCardAction;","\n\n const loadCardsAction = (listId, boardId, idToken) => (dispatch) => {\n    const bodyContent = JSON.stringify({\n        listId: listId\n    })\n    dispatch({ type: \"LOAD_CARDS_PENDING\" });\n    fetch('http://localhost:3001/loadCards',\n        {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": idToken\n            },\n            body: bodyContent\n        })\n        .then(response => {\n            return response.json()\n        })\n        .then(data => dispatch({ type: \"LOAD_CARDS_SUCCESS\", payload: { data, boardId, listId } }))\n        .catch(error => dispatch({ type: 'LOAD_CARDS_FAILED', payload: error }))\n\n}\n    \nexport default loadCardsAction;","const loadCurrentBoardAction =(boardId, idToken) =>(dispatch) =>{\n\n    dispatch({type: \"LOAD_CURRENT_BOARD_PENDING\"});\n    fetch('http://localhost:3001/loadCurrenteBoard',\n      {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json',\n          \"Authorization\": idToken\n        },\n        body:JSON.stringify({\n            boardId: boardId\n          })\n      })\n      .then(response =>{\n        return response.json()\n      })\n      .then(data => dispatch({type:\"LOAD_CURRENT_BOARD_SUCCESS\", payload:data}))\n      .catch(error => dispatch({type: 'LOAD_CURRENT_BOARD_FAILED', payload:error }))\n}\n\nexport default loadCurrentBoardAction;","const addCurrentBoardListAction =(list) =>{\n    return {\n        type: \"ADD_CURRENT_BOARD_LIST\",\n        payload:list\n       \n    }\n}\n\nexport default addCurrentBoardListAction;","const addCurrentBoardCardAction =(data, listId) =>{\n    return {\n        type:'ADD_CURRENT_BOARD_CARD',\n        payload:{data, listId}\n    }\n}\n\n\nexport default addCurrentBoardCardAction;","const updateListTitle =(listId, data) =>{\n    return {\n        type:'UPDATE_LIST_TITLE',\n        payload:{\n            listId,\n            data\n        }\n    }\n}\n\nexport default updateListTitle;","const updateCardContentAction =(cardId, data) =>{\n    return {\n        type:'UPDATE_CARD_CONTENT', \n        payload:{\n            cardId, \n            data\n        }\n    }\n}\n\n\nexport default updateCardContentAction;","const updateListAction =(data) =>{\n    return {\n        type:'UPDATE_LIST',\n        payload:data\n    }\n}\n\nexport default updateListAction;","const deleteCardFromPreviousListAction = (sourceListId, data) =>{\n    return {\n        type: 'DELETE_CARD_FROM_LIST',\n        payload:{sourceListId,\n        data}\n    }\n}\n\nexport default deleteCardFromPreviousListAction;","\n\nimport React from \"react\";\nimport \"tachyons\"\nimport Modal from \"react-modal\"\nimport { Button, Spinner } from \"reactstrap\"\nimport CardList from \"./CardList\"\nimport Card from \"./Card\"\nimport \"../../style.css\"\nimport Scroll from \"./Scroll\"\nimport { connect } from \"react-redux\"\nimport createListAction from \"../../redux/actions/createListAction\"\nimport createCardAction from \"../../redux/actions/createCardAction\"\nimport { Redirect } from \"react-router-dom\";\nimport { Row } from \"reactstrap\";\nimport loadCardsAction from \"../../redux/actions/loadCardsAction\";\nimport UserData from './UserData';\nimport loadCurrentBoardAction from \"../../redux/actions/loadCurrentBoardAction\"\nimport loadCurrentBoardListAction from \"../../redux/actions/loadCurrentBoardListAction\"\nimport addCurrentBoardlistAction from \"../../redux/actions/addCurrentBoardListAction\"\nimport addCurrentBoardCardAction from \"../../redux/actions/addCurrentBoardCardAction\"\nimport updateListTitleAction from \"../../redux/actions/updateListTitleAction\"\nimport updateCardContentAction from \"../../redux/actions/updateCardContentAction\"\nimport \"pattern.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport updateListAction from \"../../redux/actions/updateListAction\";\nimport deleteCardFromPreviousListAction from \"../../redux/actions/deleteCardFromPreviousListAction\"\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\n\n\n\n\nclass BoardPage extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            modalIsOpen: false,\n            input: \"\",\n            cardTitle: \"\",\n            list: false,\n            isInEditMode: false,\n            value: UserData.getCurrentBoardTitle(),\n            lists: [],\n            listEdit: {\n                listId: null,\n                listEditMode: false\n            },\n            newListTitle: '',\n            addCardMode: {\n                listId: null,\n                isAddCardOpen: false,\n            },\n            editCardMode: {\n                cardId: null,\n                isEditCardOpen: false\n            },\n            newCardContent: '',\n            dropDownOpen: false,\n            lists: {}\n\n        }\n\n    }\n\n    changeEditMode = () => {\n        this.setState({\n            isInEditMode: !this.state.isInEditMode\n        })\n    }\n\n\n    updateComponentValue = () => {\n        this.setState({\n            isInEditMode: false,\n        })\n        UserData.updateCurrentBoardTitle(this.state.value)\n        const bodyContent = JSON.stringify({\n            boardId: UserData.getCurrentBoardId(),\n            newTitle: this.state.value\n        })\n\n        fetch('https://git.heroku.com/stark-anchorage-18510.git/updateBoardTitle',\n            {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                    \"Authorization\": UserData.getToken()\n                },\n                body: bodyContent\n            })\n            .then(response => {\n                return response.json()\n            })\n            .then(data => {\n                if (data) {\n                    UserData.updateCurrentBoardTitle(data.boardname)\n                }\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n\n    renderEditView = () => {\n        return <div>\n            <input\n                type=\"text\"\n                defaultValue={UserData.getCurrentBoardTitle()}\n                ref=\"theTextInput\"\n                onChange={this.newValue}\n            />\n            <Button variant=\"primary\" className=\"addCardButton\" onClick={this.changeEditMode}>X</Button>\n            <Button variant=\"primary\" className=\"cancelButton\" onClick={this.updateComponentValue}>✔</Button>\n        </div>\n    }\n\n\n\n\n    newValue = (e) => {\n        this.setState({ value: e.target.value })\n    }\n\n\n    renderDefaultView = () => {\n        return <div onClick={this.changeEditMode} className=\"boardTitle\">\n            {UserData.getCurrentBoardTitle()}\n        </div>\n    }\n\n\n    closeCardModal = (i) => {\n        this.setState(prevState => ({\n            addCardMode: {                   // object that we want to update\n                ...prevState.addCardMode,    // keep all other key-value pairs\n                listId: i,\n                isAddCardOpen: !prevState.addCardMode.isAddCardOpen\n            }\n        }))\n    }\n\n    openModal = () => {\n        this.setState({ modalIsOpen: true })\n    }\n\n    closeModal = () => {\n        this.setState({ modalIsOpen: false })\n    }\n\n    inputOnChange = (event) => {\n        this.setState({ input: event.target.value })\n    }\n\n    addList = () => {\n        this.setState({ modalIsOpen: false })\n        if (this.state.input.length > 0) {\n            const bodyContent = JSON.stringify({\n                boardId: UserData.getCurrentBoardId(),\n                listTitle: this.state.input\n            })\n            fetch('https://git.heroku.com/stark-anchorage-18510.git/createList',\n                {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        \"Authorization\": UserData.getToken()\n                    },\n                    body: bodyContent\n                }\n            )\n                .then(response => {\n                    return response.json()\n                })\n                .then(data => {\n                    if (data) {\n                        this.props.addCurrentBoardList(data)\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n        else {\n            alert(\"please enter a list title...\")\n            this.setState({ modalIsOpen: true })\n        }\n        this.setState({ input: \"\" })\n    }\n\n    componentDidMount() {\n        this.props.loadCurrentBoardList(this.props.match.params.boardId, UserData.getToken())\n    }\n\n    cardTitleOnChange = (event) => {\n        this.setState({ cardTitle: event.target.value })\n    }\n\n    addCard = (i) => {\n        if (this.state.cardTitle.length > 0) {\n            const bodyContent = JSON.stringify({\n                listId: this.props.currentBoard.lists[i].listid,\n                cardContent: this.state.cardTitle\n            })\n\n            fetch('https://git.heroku.com/stark-anchorage-18510.git/createCard',\n                {\n                    method: \"post\",\n                    headers: {\n                        'Content-Type': 'application/json',\n                        \"Authorization\": UserData.getToken()\n                    },\n                    body: bodyContent\n\n                }\n            )\n                .then(response => {\n                    return response.json()\n                })\n                .then(data => {\n                    this.props.addCurrentBoardCard(data, this.props.currentBoard.lists[i].listid)\n                    this.setState({ cardTitle: \"\" })\n                })\n\n            this.setState(prevState => ({\n                addCardMode: {\n                    ...prevState.addCardMode,\n                    listId: i,\n                    isAddCardOpen: !prevState.addCardMode.isAddCardOpen\n                }\n            }))\n        }\n        else {\n            alert(\"enter card content\")\n            this.setState({ cardTitle: \"\" })\n        }\n\n    }\n\n    changeListEditMode = (i) => {\n        this.setState(prevState => ({\n            listEdit: {                   // object that we want to update\n                ...prevState.listEdit,    // keep all other key-value pairs\n                listId: i,\n                listEditMode: !prevState.listEdit.listEditMode                       // update the value of specific key\n            }\n        }))\n    }\n\n    updateListTitle = (listId) => {\n        this.setState(prevState => ({\n            listEdit: {                   // object that we want to update\n                ...prevState.listEdit,    // keep all other key-value pairs\n                listId: listId,\n                listEditMode: !prevState.listEdit.listEditMode,\n            }\n        }))\n        if (this.state.newListTitle.length > 0) {\n            const bodyContent = JSON.stringify({\n                listId: listId,\n                newTitle: this.state.newListTitle\n            })\n\n            fetch('https://git.heroku.com/stark-anchorage-18510.git/updateListTitle',\n                {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        \"Authorization\": UserData.getToken()\n                    },\n                    body: bodyContent\n                })\n                .then(response => {\n                    return response.json()\n                })\n                .then(data => {\n                    if (data) {\n                        this.props.updateListTitle(listId, data)\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n\n        this.setState({ newListTitle: '' })\n    }\n\n    onListTitleChange = (e) => {\n        this.setState({ newListTitle: e.target.value })\n\n    }\n\n    openCardEditMode = (cardId) => {\n        this.setState(prevState => ({\n            editCardMode: {\n                ...prevState.editCardMode,\n                cardId: cardId,\n                isEditCardOpen: !prevState.editCardMode.isEditCardOpen                       // update the value of specific key\n            }\n        }))\n\n    }\n\n    updateCard = (cardId) => {\n        this.setState(prevState => ({\n            editCardMode: {                   // object that we want to update\n                ...prevState.editCardMode,    // keep all other key-value pairs\n                cardId: cardId,\n                isEditCardOpen: !prevState.editCardMode.isEditCardOpen                       // update the value of specific key\n            }\n        }))\n\n        if (this.state.newCardContent.length > 0) {\n            const bodyContent = JSON.stringify({\n                cardId: cardId,\n                newCardContent: this.state.newCardContent\n            })\n\n            fetch('https://git.heroku.com/stark-anchorage-18510.git/updateCardContent',\n                {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        \"Authorization\": UserData.getToken()\n                    },\n                    body: bodyContent\n                })\n                .then(response => {\n                    return response.json()\n                })\n                .then(data => {\n                    if (data) {\n                        this.props.updateCardContent(cardId, data)\n                        this.setState({ newCardContent: '' })\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n    }\n\n    cardEditOnChange = (e) => {\n        this.setState({ newCardContent: e.target.value })\n    }\n\n\n    openDropDown = () => {\n        this.setState({ dropDownOpen: !this.state.dropDownOpen })\n    }\n\n\n    // ------------- Drag and Drop part \n\n    onDragEnd = (result, lists) => {\n        console.log(lists)\n        if (!result.destination) return;\n        const { source, destination } = result;\n        console.log(\"result \" + JSON.stringify(result.source))\n        if (source.droppableId !== destination.droppableId) {\n            const sourceList = lists[source.droppableId];\n            const destList = lists[destination.droppableId];\n            const sourceCards = [...sourceList.cards];\n            const destCards = [...destList.cards];\n            const [removed] = sourceCards.splice(source.index, 1);\n            destCards.splice(destination.index, 0, removed);\n            let cardId = destCards[destination.index].cardid;\n\n            const bodyContent = JSON.stringify({\n                cardId: cardId,\n                listId: destList.listid\n            })\n\n            fetch('https://git.heroku.com/stark-anchorage-18510.git/dragCard',\n                {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        \"Authorization\": UserData.getToken()\n                    },\n                    body: bodyContent\n                })\n                .then(response => {\n                    return response.json()\n                })\n                .then(data => {\n                    if (data) {\n                        this.props.updateList(data)\n                        this.props.deleteCardFromList(sourceList.listid, data)\n                        Object.assign(this.state.lists, this.props.currentBoard.lists);\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n\n\n            this.setState({\n                ...lists,\n                [source.droppableId]: {\n                    ...sourceList,\n                    cards: sourceCards\n                },\n                [destination.droppableId]: {\n                    ...destList,\n                    cards: destCards\n                }\n\n            })\n        } else {\n            const list = lists[source.droppableId];\n            const copiedCards = [...list.cards];\n            const [removed] = copiedCards.splice(source.index, 1);\n            copiedCards.splice(destination.index, 0, removed);\n            this.setState({\n                ...lists,\n                [source.droppableId]: {\n                    ...list,\n                    cards: copiedCards\n                }\n            });\n        }\n\n    };\n\n\n\n\n\n    render() {\n        let lists = [];\n\n        if (!this.props.isCurrentBoardListPending) {\n            lists = this.props.currentBoard.lists;\n            Object.assign(this.state.lists, this.props.currentBoard.lists);\n\n            console.log(\"render  this.state.lists \" + JSON.stringify(this.state.lists))\n        }\n\n        if (UserData.getToken()) {\n            return (\n                <>\n                    <nav className=\"dt w-100 border-box ph5-ns b--white-10\">\n                        <a className=\"dtc v-mid mid-gray link dim w-25\" href=\"#\" title=\"Home\">\n                            <img src=\"http://tachyons.io/img/logo.jpg\" className=\"dib w2 h2 br-100\" alt=\"Site Name\" />\n                        </a>\n                        <div className=\"dtc v-mid w-75 tr\">\n                            <a className=\"link dim white f6 f5-ns dib mr3 mr4-ns\" href='/user-profile' title=\"Boards\">Boards</a>\n                            <a className=\"link dim white f6 f5-ns dib mr3 mr4-ns\" href ='/landing-page' title=\"Home\">Home</a>\n                        </div>\n                    </nav>\n                    {/* <div className=\"board-header\">\n                    </div>    */}\n                    <div className=\"board-header-btn mod-board-name\">\n                        {this.state.isInEditMode ?\n                            this.renderEditView() :\n                            this.renderDefaultView()\n                        }\n                    </div>\n                    {/* </section> */}\n                    <DndProvider backend={HTML5Backend}>\n                        <DragDropContext onDragEnd={(result) => this.onDragEnd(result, this.state.lists)} >\n                            <div className=\"board-canvas board pattern-dots-lg\">\n                                <div className=\"js-no-higher-edits js-list-sortable \">\n                                    {this.props.isCurrentBoardListPending ?\n                                        <div>\n                                            <h1>Loading...</h1>\n                                            <Spinner color=\"secondary\" />\n                                        </div> :\n                                        lists.map((list, i) => {\n                                            return <div className=\"list list-wrapper\" >\n                                                {this.state.listEdit.listEditMode && this.state.listEdit.listId === list.listid ?\n                                                    <div>\n                                                        <input\n                                                            type=\"text\"\n                                                            defaultValue={list.listtitle}\n                                                            ref=\"theTextInput\"\n                                                            onChange={this.onListTitleChange}\n                                                            className=\"flist-name-input\"\n                                                        />\n                                                        <Button variant=\"primary\" className=\"addCardButton\" onClick={() => this.changeListEditMode(list.listid)}>X</Button>\n                                                        <Button variant=\"primary\" className=\"cancelButton\" onClick={() => this.updateListTitle(list.listid)}>✔</Button>\n                                                    </div> :\n                                                    <div>\n                                                        <CardList\n                                                            title={list.listtitle}\n                                                            id={list.listid}\n                                                            key={list.listid}\n                                                            changeListEditMode={() => this.changeListEditMode(list.listid)}\n                                                        // openCardModal={this.openCardModal}\n                                                        />\n                                                        {/* <Button variant=\"secondary\" className=\"deleteButton\" onClick={this.openDropDown}>X</Button> */}\n                                                        {/* <Button id=\"UncontrolledPopover\" type=\"top\">\n                                                        Delete List\n                                                         </Button> */}\n                                                        {/* <UncontrolledPopover placement=\"right\" target=\"UncontrolledPopover\">\n                                                            <PopoverHeader>Popover Title</PopoverHeader>\n                                                            <PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</PopoverBody>\n                                                        </UncontrolledPopover> */}\n                                                    </div>\n                                                }\n                                                <Droppable droppableId={i.toString()} key={list.listid} >\n                                                    {(provided, snapshot) => (\n                                                        <div className=\"list list-wrapper\"\n                                                            {...provided.droppableProps}\n                                                            ref={provided.innerRef}\n                                                            inputRef={React.createRef(null)}\n                                                            style={{\n                                                                background: snapshot.isDraggingOver\n                                                                    ? \"yellow\"\n                                                                    : null\n                                                            }}\n                                                        >\n                                                            <div className=\"u-clearfix list-cards\">\n\n                                                                {\n                                                                    list.cards.map((card, index) => {\n                                                                        return <Draggable\n                                                                            key={card.cardid}\n                                                                            draggableId={card.cardid.toString()}\n                                                                            index={index}\n                                                                        >\n                                                                            {(provided, snapshot) => (\n                                                                                <div\n                                                                                    // style={{\n                                                                                    //     userSelect: \"none\",\n                                                                                    //     margin: \"0 0 8px 0\",\n                                                                                    //     minHeight: \"50px\",\n                                                                                    //     backgroundColor: snapshot.isDragging\n                                                                                    //         ? \"#263B4A\"\n                                                                                    //         : \"#456C86\",\n                                                                                    //     ...provided.draggableProps.style\n                                                                                    // }}\n                                                                                    ref={provided.innerRef}\n                                                                                    {...provided.draggableProps}\n                                                                                    {...provided.dragHandleProps}\n                                                                                >\n                                                                                    {this.state.editCardMode.isEditCardOpen && this.state.editCardMode.cardId === card.cardid ?\n                                                                                        <div>\n                                                                                            <textarea\n                                                                                                type=\"text\"\n                                                                                                defaultValue={card.cardcontent}\n                                                                                                // ref=\"theTextInput\"\n                                                                                                onChange={this.cardEditOnChange}\n                                                                                                className=\"add-item\"\n                                                                                            />\n                                                                                            <Button variant=\"primary\" className=\"addCardButton\" onClick={() => this.openCardEditMode(card.cardid)}>X</Button>\n                                                                                            <Button variant=\"primary\" className=\"cancelButton\" onClick={() => this.updateCard(card.cardid)}>✔</Button>\n                                                                                        </div> :\n                                                                                            <div\n                                                                                                className=\"f5 lh-copy measure-narrow list-card\"\n                                                                                                id={card.cardId}\n                                                                                                key={card.cardId}\n                                                                                                onClick={() => this.openCardEditMode(card.cardid)}\n                                                                                            >\n\n                                                                                                {card.cardcontent}\n\n                                                                                            </div>\n                                                                                    }\n                                                                                </div>\n                                                                            )}\n                                                                        </Draggable>\n                                                                    })}\n                                                            </div>\n                                                            {provided.placeholder}\n                                                        </div>\n                                                    )}\n                                                </Droppable>\n\n                                                {/* ==== */}\n                                                {\n                                                    this.state.addCardMode.isAddCardOpen && this.state.addCardMode.listId === i ?\n                                                        <div>\n                                                            <textarea\n                                                                type=\"text\"\n                                                                placeholder=\"enter card title...\"\n                                                                onChange={this.cardTitleOnChange}\n                                                                className=\"add-item\"\n                                                            />\n                                                            <Button variant=\"primary\" className=\"addCardButton\" onClick={() => this.addCard(i)} type=\"submit\">add card</Button>\n                                                            <Button variant=\"secondary\" className=\"cancelButton\" onClick={() => this.closeCardModal(i)}>X</Button>\n                                                        </div> :\n\n                                                        <div className=\"card-composer-container js-card-composer-container dark-background-hover\" onClick={() => this.closeCardModal(i)} type=\"submit\">\n                                                            <a className=\"open-card-composer js-open-card-composer\" href=\"#\">\n                                                                <span className=\"icon-sm icon-add\">\n                                                                    +\n                                                                             </span>\n                                                                {/* <span className=\"js-add-a-card hide\">Add a card</span> */}\n                                                                <span className=\"js-add-another-card\">  Add another card</span>\n                                                            </a>\n                                                            <div className=\"js-card-templates-button card-templates-button-container dark-background-hover\">\n                                                                <div className=\"js-react-root\">\n                                                                    <div><a className=\"_2arBFfwXVxA0AM\" role=\"button\" href=\"#\">\n                                                                        <span className=\"icon-sm icon-template-card dark-background-hover\">\n                                                                        </span></a></div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                }\n\n\n                                                {/* ====== */}\n                                            </div>\n\n\n                                        })}\n\n\n\n                                    {this.state.modalIsOpen ?\n                                        <div isOpen={this.state.modalIsOpen} className=\"js-add-list list-wrapper mod-add\">\n                                            <form>\n                                                <a class=\"open-add-list js-open-add-list\"\n                                                    href=\"#\" tabindex=\"-1\">\n                                                    <span class=\"placeholder\">\n                                                        <span class=\"icon-sm icon-add\">\n                                                        </span>Add another list</span>\n                                                </a>\n                                                <input className=\"list-name-input\"\n                                                    type=\"text\" name=\"name\"\n                                                    placeholder=\"Enter list title...\"\n                                                    autocomplete=\"off\" dir=\"auto\"\n                                                    maxlength=\"512\"\n                                                    onChange={this.inputOnChange} />\n                                                <div className=\"list-add-controls u-clearfix\" />\n                                                <input className=\"primary mod-list-add-button js-save-edit\"\n                                                    type=\"submit\" value=\"Add List\" onClick={this.addList} />\n                                                <a className=\"icon-lg icon-close dark-hover js-cancel-edit\" href=\"#\" onClick={this.closeModal}>\n                                                    X\n                                                    </a>\n                                            </form>\n                                        </div> :\n                                        <Button onClick={this.openModal}>\n                                            + Add another list\n                                 </Button>\n                                        //  this.props.isListsPending?\n                                    }\n                                </div>\n                            </div>\n                        </DragDropContext>\n                    </DndProvider>\n\n                </>\n            )\n        }\n        else {\n            return (\n                <Redirect to=\"/landing-page\" />\n            )\n\n        }\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    let boardId = parseInt(ownProps.match.params.boardId);\n\n    return {\n        boards: state.boards,\n        board: state.boards.find(board => board.boardId === boardId),\n        user: state.user,\n        boardId: boardId,\n        isListsPending: state.isListsPending,\n        listsLoadError: state.listsLoadError,\n        isBoardsPending: state.isBoardsPending,\n        currentBoard: state.currentBoard,\n        isCurrentBoardListPending: state.isCurrentBoardListPending,\n        state: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createList: (listTitle, boardId, listId) => dispatch(createListAction(listTitle, boardId, listId)),\n        createCard: (cardContent, listId, boardId, cardId) => dispatch(createCardAction(cardContent, listId, boardId, cardId)),\n        loadCards: (listId, boardId, idToken) => dispatch(loadCardsAction(listId, boardId, idToken)),\n        loadCurrentBoard: (boardId, token) => dispatch(loadCurrentBoardAction(boardId, token)),\n        loadCurrentBoardList: (boardId, idToken) => dispatch(loadCurrentBoardListAction(boardId, idToken)),\n        addCurrentBoardList: (list) => dispatch(addCurrentBoardlistAction(list)),\n        addCurrentBoardCard: (data, listId) => dispatch(addCurrentBoardCardAction(data, listId)),\n        updateListTitle: (listId, data) => dispatch(updateListTitleAction(listId, data)),\n        updateCardContent: (cardId, data) => dispatch(updateCardContentAction(cardId, data)),\n        updateList: (data) => dispatch(updateListAction(data)),\n        deleteCardFromList: (sourceListId, data) => dispatch(deleteCardFromPreviousListAction(sourceListId, data))\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardPage)\n\n","/*!\n\n=========================================================\n* Argon Design System React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport history from './history'\nimport \"./index.css\"\nimport {createStore, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\"\nimport rootReducer from \"./redux/reducers/rootReducer\"\nimport {createLogger} from \"redux-logger\"\nimport thunk from \"redux-thunk\"\n// require(\"history\").createBrowserHistory\n\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"./assets/vendor/nucleo/css/nucleo.css\";\nimport \"./assets/vendor/font-awesome/css/font-awesome.min.css\";\nimport \"./assets/scss/argon-design-system-react.scss\";\n\n// my notes: I have added these lines from dashboard index.js file\n// import \"dashboard_app/assets/plugins/nucleo/css/nucleo.css\";\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\n// import \"dashboard_app/assets/scss/argon-dashboard-react.scss\";\n\nimport Landing from \"./views/examples/Landing.js\";\nimport Login from \"./views/examples/Login.js\";\nimport Register from \"./views/examples/Register.js\";\nimport UserProfile from \"./views/examples/UserProfile\";\nimport BoardPage from \"./views/examples/BoardPage\"\n// import AdminLayout from \"dashboard_app/layouts/Admin.js\"\n// import AuthLayout from \"dashboard_app/layouts/Auth.js\";\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunk,logger));\n\nReactDOM.render(\n  <Provider store = {store}>\n    <Router history = {history}>\n    <Switch>\n      {/* <Route path=\"/dashboard\" exact render={props => <Index {...props} />} /> */}\n      <Route\n        path=\"/landing-page\"\n        exact\n        render={props => <Landing {...props} />}\n      />\n      <Route path=\"/login-page\" exact render={props => <Login {...props} />} />\n      {/* <Route\n        path=\"/profile-page\"\n        exact\n        render={props => <Profile {...props} />}\n      /> */}\n      <Route path=\"/user-profile\" exact render={props => <UserProfile {...props} />} />\n      <Route\n        path=\"/register-page\"\n        exact\n        render={props => <Register {...props} />}\n      />\n      <Route\n        // path=\"/board-page/:userName/:userId/:boardName\"\n        path=\"/board-page/:boardId\"\n        exact\n        render={props => <BoardPage {...props} />}\n      />\n\n    \n      {/* <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/index\" /> */}\n      <Redirect to=\"/landing-page\"/>\n    </Switch>\n  </Router>\n  </Provider>\n  ,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/github.4ffd4fe7.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.87be59a1.svg\";"],"sourceRoot":""}